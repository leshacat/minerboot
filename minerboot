#!/usr/bin/env bash
#
#
#  minerboot - A script to set up and run NVIDIA miner(s) on boot
#
#  Copyright (C) 2019 LeshaCat
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
#


# Make sure only root can run our script
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root" 1>&2
   exit 1
fi

SCRIPT_VER="v1.0.1a"

BDIR="$( cd "$(dirname "$0")" ; pwd -P )"
WDIR=$(pwd)

# Load our functions
source ${BDIR}/inc/functions.sh

# Load our config
source ${BDIR}/config

logit "MinerBoot ${SCRIPT_VER} Started!"

# Run our setup script
source ${BDIR}/inc/setup.sh

IFS=',' # space is set as delimiter
read -ra THE_COINS <<< "${THECOINS}"

for CURRENT_COIN in "${THE_COINS[@]}"
do

    if [ -f ${BDIR}/miners/${CURRENT_COIN} ] ; then
    
        TMPPID=$(cat ${BDIR}/tmp/${CURRENT_COIN}.pid)        
        TMPRES=$(ps -p ${TMPPID} | wc -l)

        if [ "$TMPRES" -gt 1 ] ; then
                    
            if [ ! -f ${BDIR}/miners/${CURRENT_COIN} ] ; then
                logit "File ${BDIR}/miners/${CURRENT_COIN} does not exist!"
                logit "Skipping coin ${CURRENT_COIN}!"
            else
                
                source ${BDIR}/miners/${CURRENT_COIN}
            
                logit "Starting miner for ${CURRENT_COIN}"
                
                if [ -z "$MINERLOG" ] ; then MINERLOG=/dev/null; fi    
                
                sudo /bin/bash -c ${MINERCMD} > ${MINERLOG} 2>&1 &
                
                logit "Miner started for ${CURRENT_COIN} PID: ${!}"
                
                echo "${!}" > ${BDIR}/tmp/${CURRENT_COIN}.pid
            fi
        
        else
            logit "Miner for ${CURRENT_COIN} is already started!"
            logit "Skipping coin ${CURRENT_COIN}!"
        fi
        
    else
        logit "Config for ${CURRENT_COIN} is missing!"
        logit "Skipping coin ${CURRENT_COIN}!"
    fi  
    
done
    
    
logit "Monitoring miner(s) ${THECOINS} (CTRL + C TO EXIT)"
logit "Monitoring miner(s) ${THECOINS} (CTRL + C TO EXIT)"
logit "Monitoring miner(s) ${THECOINS} (CTRL + C TO EXIT)"

while [ "$MONITOR_COINS" = true ]
do

    for CURRENT_COIN in "${THE_COINS[@]}"
    do
        
        TMPPID=$(cat ${BDIR}/tmp/${CURRENT_COIN}.pid)        
        TMPRES=$(ps -p ${TMPPID} | wc -l)

        if [ "$TMPRES" -gt 1 ] ; then
        
            if [ ! -f ${BDIR}/miners/${CURRENT_COIN} ] ; then
                logit "File ${BDIR}/miners/${CURRENT_COIN} does not exist!"
                logit "Skipping coin ${CURRENT_COIN}!"
            else
            
                source ${BDIR}/miners/${CURRENT_COIN}
                
                if [ "$MONITOR" = true ] ; then
            
                    logit "Miner for ${CURRENT_COIN} shut down unexpectedly...!"
                    logit "Starting miner for ${CURRENT_COIN}"
                    
                    if [ -z "$MINERLOG" ] ; then MINERLOG=/dev/null; fi    
                    
                    sudo /bin/bash -c ${MINERCMD} > ${MINERLOG} 2>&1 &
                    
                    logit "Miner started for ${CURRENT_COIN} PID: ${!}"
                    
                    echo "${!}" > ${BDIR}/tmp/${CURRENT_COIN}.pid
                    
                fi
            fi
        fi
            
    done
    
    logit "Miner check complete!"
    
    sleep ${MONITOR_INTERVAL}

done


logit "MinerBoot ${SCRIPT_VER} Finished!"


















